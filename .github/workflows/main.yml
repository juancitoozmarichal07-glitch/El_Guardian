# ==================================================================================
#
#               PROYECTO VERIDIAN - WORKFLOW "TODO EN UNO"
#
#   Arquitecto: T√∫
#   Ingeniero Jefe: Manus
#   Versi√≥n: Se acab√≥ la puta broma.
#
#   OBJETIVO: Construir AAB y APK, firmar el APK, y subir ambos.
#             Todo en un solo bloque. Sin excusas. Sin piedad.
#
# ==================================================================================

name: Build Veridian (AAB & APK)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-sign:
    runs-on: ubuntu-latest

    steps:
    # --------------------------------------------------------------------------
    # PASO 1: PREPARAR LA MESA DE OPERACIONES
    # --------------------------------------------------------------------------
    - name: ‚òï 1. Preparando el entorno...
      uses: actions/checkout@v4

    - name: ‚òï 2. Instalando herramientas (Java & Node.js)...
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: üì¶ 3. Instalando Cordova...
      run: npm install -g cordova

    # --------------------------------------------------------------------------
    # PASO 2: LA OPERACI√ìN A CORAZ√ìN ABIERTO (UN SOLO BLOQUE)
    # --------------------------------------------------------------------------
    - name: üí• 4. INYECTAR, CONSTRUIR, FIRMAR Y CONQUISTAR
      id: the_final_battle
      run: |
        # -------------------------------------------------
        # PARTE I: LA INYECCI√ìN
        # -------------------------------------------------
        echo "--> PARTE I: Inyectando clave secreta en www/index.html..."
        if [ ! -f "www/index.html" ]; then
            echo "‚ùå ERROR FATAL: El archivo www/index.html no existe. ¬°Abortando!"
            exit 1
        fi
        sed -i 's|const HUGGING_FACE_API_KEY = "";|const HUGGING_FACE_API_KEY = "${{ secrets.HUGGING_FACE_API_KEY }}";|g' www/index.html
        echo "‚úÖ INYECCI√ìN COMPLETADA."
        echo "-------------------------------------------------"

        # -------------------------------------------------
        # PARTE II: LA CONSTRUCCI√ìN
        # -------------------------------------------------
        echo "--> PARTE II: Creando y configurando el proyecto Cordova..."
        cordova create build_dir io.veridian.app Veridian
        cd build_dir
        rm -rf www
        cp -r ../www .
        cp ../config.xml .
        cordova platform add android@latest
        echo "‚úÖ PROYECTO CREADO."
        
        echo "--> Construyendo AAB (para Google Play)..."
        cordova build android --release -- -- --bundle
        echo "‚úÖ AAB CONSTRUIDO."

        echo "--> Construyendo APK (para la Web)..."
        cordova build android --release -- -- --packageType=apk
        echo "‚úÖ APK CONSTRUIDO."
        echo "-------------------------------------------------"

        # -------------------------------------------------
        # PARTE III: LA FIRMA (EL GOLPE DE GRACIA)
        # -------------------------------------------------
        echo "--> PARTE III: Buscando y firmando el APK..."
        UNSIGNED_APK_PATH=$(find . -name "app-release-unsigned.apk")
        
        if [ -z "$UNSIGNED_APK_PATH" ]; then
            echo "‚ùå ERROR CATASTR√ìFICO: ¬°No se encontr√≥ el APK (app-release-unsigned.apk) despu√©s del build!"
            echo "--> Contenido del directorio de outputs para depurar:"
            find ./platforms/android/app/build/outputs -type f
            exit 1
        fi
        
        echo "--> APK sin firmar encontrado en: ${UNSIGNED_APK_PATH}"
        
        KEYSTORE_FILE="veridian.keystore"
        SIGNED_APK_FILE="veridian-web-installer.apk"
        KEY_ALIAS="veridian_key"

        echo "--> Creando Keystore (${KEYSTORE_FILE})..."
        keytool -genkey -v -keystore ${KEYSTORE_FILE} -alias ${KEY_ALIAS} -keyalg RSA -keysize 2048 -validity 10000 -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -keypass "${{ secrets.KEY_PASSWORD }}" -dname "CN=Veridian,O=Veridian Corp,C=UY"
        
        echo "--> Firmando el APK con el alias '${KEY_ALIAS}'..."
        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
          -keystore ${KEYSTORE_FILE} \
          -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
          -keypass "${{ secrets.KEY_PASSWORD }}" \
          -signedjar ${SIGNED_APK_FILE} \
          ${UNSIGNED_APK_PATH} \
          ${KEY_ALIAS}
        
        echo "‚úÖ FIRMA COMPLETADA. El enemigo ha ca√≠do."
        echo "-------------------------------------------------"

    # --------------------------------------------------------------------------
    # PASO 3: RECOGER EL BOT√çN DE GUERRA
    # --------------------------------------------------------------------------
    - name: üöÄ 5. Subiendo AAB (para Google Play)...
      uses: actions/upload-artifact@v4
      with:
        name: Veridian-AAB-GooglePlay
        path: build_dir/platforms/android/app/build/outputs/bundle/release/app-release.aab

    - name: üöÄ 6. Subiendo APK firmado (para la Web)...
      uses: actions/upload-artifact@v4
      with:
        name: Veridian-APK-Web
        path: build_dir/veridian-web-installer.apk
