# ==================================================================================
#  PROYECTO VERIDIAN - WORKFLOW (Versión "NO ME VA A GANAR")
#  Un solo bloque. Sin escapatoria.
# ==================================================================================

name: Build, Sign & Upload Veridian APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-sign:
    runs-on: ubuntu-latest

    steps:
    # --- FASE 1: PREPARACIÓN ---
    - name: ☕ 1. Checkout Repository
      uses: actions/checkout@v4

    - name: ☕ 2. Setup Java & Node.js
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: 📦 3. Install Cordova
      run: npm install -g cordova

    # --- FASE 2: LA EJECUCIÓN FINAL (UN SOLO BLOQUE) ---
    - name: 💥 4. INJECT, BUILD, SIGN, AND CONQUER
      run: |
        # --- INYECCIÓN ---
        echo "--> FASE 1: Inyectando clave..."
        sed -i 's|const HUGGING_FACE_API_KEY = "";|const HUGGING_FACE_API_KEY = "${{ secrets.HUGGING_FACE_API_KEY }}";|g' www/index.html
        echo "✅ Clave inyectada."

        # --- CONSTRUCCIÓN ---
        echo "--> FASE 2: Construyendo proyecto..."
        cordova create build_dir io.veridian.app Veridian
        cd build_dir
        rm -rf www
        cp -r ../www .
        cp ../config.xml .
        cordova platform add android@latest
        cordova build android --release -- --arch=arm64-v8a
        echo "✅ Construcción finalizada."

        # --- VERIFICACIÓN Y FIRMA ---
        echo "--> FASE 3: Verificando y firmando..."
        # Usamos 'find' para encontrar el APK, sin importar la ruta exacta.
        UNSIGNED_APK=$(find . -name "app-release-unsigned.apk")
        
        if [ -z "$UNSIGNED_APK" ]; then
            echo "❌ ¡FALLO CATASTRÓFICO! No se encontró el APK sin firmar después del build."
            exit 1
        fi
        
        echo "--> APK sin firmar encontrado en: ${UNSIGNED_APK}"
        
        KEYSTORE="veridian.keystore"
        SIGNED_APK="veridian-final.apk"

        keytool -genkey -v -keystore ${KEYSTORE} -alias v -keyalg RSA -keysize 2048 -validity 10000 -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -keypass "${{ secrets.KEY_PASSWORD }}" -dname "CN=Veridian,O=V,C=UY"
        
        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
        -keystore ${KEYSTORE} \
        -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
        -keypass "${{ secrets.KEY_PASSWORD }}" \
        -signedjar ${SIGNED_APK} \
        ${UNSIGNED_APK} \
        v
        echo "✅ Firma completada."

    # --- FASE 3: LA ENTREGA ---
    - name: 🚀 5. Upload Victorious APK
      uses: actions/upload-artifact@v4
      with:
        name: Veridian-APK
        path: build_dir/veridian-final.apk
