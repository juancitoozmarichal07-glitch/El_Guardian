# ==================================================================================
#
#               PROYECTO VERIDIAN - WORKFLOW "YO PILOTO"
#
#   Versi√≥n: Se acabaron los errores est√∫pidos. Tomo el control total.
#
# ==================================================================================

name: Build Veridian (AAB & APK)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-sign:
    runs-on: ubuntu-latest

    steps:
    # --------------------------------------------------------------------------
    # PASO 1: PREPARACI√ìN
    # --------------------------------------------------------------------------
    - name: ‚òï 1. Preparando el entorno...
      uses: actions/checkout@v4

    - name: ‚òï 2. Instalando herramientas (Java & Node.js)...
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: üì¶ 3. Instalando Cordova...
      run: npm install -g cordova

    # --------------------------------------------------------------------------
    # PASO 2: LA OPERACI√ìN FINAL (UN SOLO BLOQUE, ORDEN CORRECTO)
    # --------------------------------------------------------------------------
    - name: üí• 4. INYECTAR, CONSTRUIR, FIRMAR Y CONQUISTAR
      id: the_final_battle
      run: |
        # -------------------------------------------------
        # PARTE I: INYECCI√ìN
        # -------------------------------------------------
        echo "--> PARTE I: Inyectando clave secreta..."
        sed -i 's|const HUGGING_FACE_API_KEY = "";|const HUGGING_FACE_API_KEY = "${{ secrets.HUGGING_FACE_API_KEY }}";|g' www/index.html
        echo "‚úÖ INYECCI√ìN COMPLETADA."
        echo "-------------------------------------------------"

        # -------------------------------------------------
        # PARTE II: CONSTRUCCI√ìN (ORDEN CORREGIDO)
        # -------------------------------------------------
        echo "--> PARTE II: Creando y configurando el proyecto Cordova..."
        cordova create build_dir io.veridian.app Veridian --no-update-notifier
        cd build_dir
        
        # ¬°¬°¬°EL ORDEN CORRECTO!!!
        # 1. A√±adimos la plataforma. ESTO CREA LA CARPETA 'platforms/android'.
        cordova platform add android@latest --no-update-notifier
        
        # 2. AHORA que la carpeta existe, creamos el archivo de propiedades de Gradle.
        echo "android.gradle.distributionUrl=https://services.gradle.org/distributions/gradle-8.4-bin.zip" > platforms/android/gradle.properties
        
        # 3. Copiamos nuestros archivos de la aplicaci√≥n.
        rm -rf www
        cp -r ../www .
        cp ../config.xml .
        echo "‚úÖ PROYECTO CREADO Y CONFIGURADO."
        
        echo "--> Construyendo AAB (para Google Play)..."
        cordova build android --release -- -- --bundle
        echo "‚úÖ AAB CONSTRUIDO."

        echo "--> Construyendo APK (para la Web)..."
        cordova build android --release -- -- --packageType=apk
        echo "‚úÖ APK CONSTRUIDO."
        echo "-------------------------------------------------"

        # -------------------------------------------------
        # PARTE III: LA FIRMA
        # -------------------------------------------------
        echo "--> PARTE III: Buscando y firmando el APK..."
        UNSIGNED_APK_PATH=$(find . -name "app-release-unsigned.apk")
        
        if [ -z "$UNSIGNED_APK_PATH" ]; then
            echo "‚ùå ERROR CATASTR√ìFICO: ¬°No se encontr√≥ el APK despu√©s del build!"
            exit 1
        fi
        
        echo "--> APK sin firmar encontrado en: ${UNSIGNED_APK_PATH}"
        
        KEYSTORE_FILE="veridian.keystore"
        SIGNED_APK_FILE="veridian-web-installer.apk"
        KEY_ALIAS="veridian_key"

        keytool -genkey -v -keystore ${KEYSTORE_FILE} -alias ${KEY_ALIAS} -keyalg RSA -keysize 2048 -validity 10000 -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -keypass "${{ secrets.KEY_PASSWORD }}" -dname "CN=Veridian,O=Veridian Corp,C=UY"
        
        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore ${KEYSTORE_FILE} -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -keypass "${{ secrets.KEY_PASSWORD }}" -signedjar ${SIGNED_APK_FILE} ${UNSIGNED_APK_PATH} ${KEY_ALIAS}
        
        echo "‚úÖ FIRMA COMPLETADA."
        echo "-------------------------------------------------"

    # --------------------------------------------------------------------------
    # PASO 3: RECOGER EL BOT√çN
    # --------------------------------------------------------------------------
    - name: üöÄ 5. Subiendo AAB (para Google Play)...
      uses: actions/upload-artifact@v4
      with:
        name: Veridian-AAB-GooglePlay
        path: build_dir/platforms/android/app/build/outputs/bundle/release/app-release.aab

    - name: üöÄ 6. Subiendo APK firmado (para la Web)...
      uses: actions/upload-artifact@v4
      with:
        name: Veridian-APK-Web
        path: build_dir/veridian-web-installer.apk
