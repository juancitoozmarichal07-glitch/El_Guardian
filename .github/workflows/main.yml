# ==================================================================================
#  PROYECTO VERIDIAN - WORKFLOW DE CONSTRUCCIÓN BLINDADO (Versión "Búnker")
#  Arquitecto: Juan Gonzalo Marichal
#  Ingeniero Jefe: Manus
# ==================================================================================
#
#  Este workflow está diseñado para ser a prueba de fallos. Cada paso verifica
#  el anterior, y los directorios de trabajo se gestionan de forma explícita
#  para eliminar cualquier ambigüedad.
#
# ==================================================================================

name: Build, Sign & Upload Veridian APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-sign:
    runs-on: ubuntu-latest

    steps:
    # --- FASE 1: PREPARACIÓN DEL ENTORNO ---
    - name: ☕ 1. Preparar la Mesa de Trabajo (Checkout)
      uses: actions/checkout@v4

    - name: ☕ 2. Instalar Herramientas Esenciales (Java & Node.js)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: 📦 3. Instalar Cordova Globalmente
      run: npm install -g cordova

    # --- FASE 2: CONSTRUCCIÓN DEL PROYECTO ---
    # Se crea un proyecto Cordova limpio para evitar conflictos y se copian los archivos.
    - name: 🏗️ 4. Preparar Proyecto Cordova
      run: |
        cordova create veridian_build io.veridian.app Veridian
        cp config.xml veridian_build/
        cp -r www/ veridian_build/
        
    - name: 💉 5. Inyectar Clave Secreta de la IA
      working-directory: ./veridian_build
      run: |
        echo "--> Buscando el archivo de destino para la API Key..."
        TARGET_FILE="www/index.html"
        PLACEHOLDER='const HUGGING_FACE_API_KEY = "";'
        
        if ! grep -q "$PLACEHOLDER" "$TARGET_FILE"; then
          echo "❌ ERROR: El marcador de posición para la API Key no fue encontrado en $TARGET_FILE."
          exit 1
        fi
        
        sed -i "s|$PLACEHOLDER|const HUGGING_FACE_API_KEY = \"${{ secrets.HUGGING_FACE_API_KEY }}\";|g" "$TARGET_FILE"
        echo "✅ Clave de Hugging Face inyectada correctamente."

    - name: 🤖 6. Añadir Plataforma Android
      working-directory: ./veridian_build
      run: cordova platform add android@latest

    - name: 🛠️ 7. Construir APK (Unsigned)
      working-directory: ./veridian_build
      run: cordova build android --release -- --arch=arm64-v8a

    # --- FASE 3: FIRMA Y FINALIZACIÓN (ZONA CRÍTICA) ---
    - name: 🔍 8. VERIFICAR existencia del APK sin firmar
      id: check_apk
      working-directory: ./veridian_build
      run: |
        APK_PATH="platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk"
        if [ -f "$APK_PATH" ]; then
          echo "✅ ¡Éxito! APK sin firmar encontrado en: $APK_PATH"
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        else
          echo "❌ ¡FALLO CRÍTICO! No se encontró el APK sin firmar. Revisando la estructura de directorios..."
          ls -R platforms/android/app/build/outputs/
          exit 1
        fi

    - name: 🖋️ 9. Crear Archivo de Firma (Keystore)
      working-directory: ./veridian_build
      run: |
        keytool -genkey -v -keystore veridian-release-key.keystore \
        -alias veridian_alias \
        -keyalg RSA -keysize 2048 -validity 10000 \
        -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
        -keypass "${{ secrets.KEY_PASSWORD }}" \
        -dname "CN=Veridian, OU=AI, O=Veridian Corp, L=Montevideo, S=Uruguay, C=UY"
      
    - name: ✍️ 10. Firmar el APK (Operación Atómica)
      working-directory: ./veridian_build
      run: |
        echo "--> Firmando el APK..."
        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
        -keystore veridian-release-key.keystore \
        -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
        -keypass "${{ secrets.KEY_PASSWORD }}" \
        -signedjar veridian-v1.0-universal.apk \
        ${{ steps.check_apk.outputs.apk_path }} \
        veridian_alias
        echo "✅ APK firmado y finalizado como veridian-v1.0-universal.apk"

    # --- FASE 4: EMPAQUETADO Y ENTREGA ---
    - name: 🚀 11. Subir Artefacto Final (El APK Firmado)
      uses: actions/upload-artifact@v4
      with:
        name: Veridian-APK
        path: ./veridian_build/veridian-v1.0-universal.apk
